name: Build and Release EXE

permissions:
  contents: write
  pull-requests: write

on:
  push:
    branches:
      - main

jobs:
  build:
    if: contains(github.event.head_commit.message, 'release v')
    runs-on: windows-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
      
      - name: Extract tag and body from commit message
        id: extract_tag
        shell: bash
        run: |
          echo "Commit message: ${{ github.event.head_commit.message }}"

          TAG=$(echo "${{ github.event.head_commit.message }}" | sed -n 's/.*release[[:space:]]\+\(v[0-9.]\+\).*/\1/p')
          BODY=$(echo "${{ github.event.head_commit.message }}" | sed -n 's/^\(.*\)[[:space:]]release[[:space:]]\+v[0-9.]\+.*$/\1/p')

          if [ -z "$TAG" ]; then
            echo "❌ No tag found in commit message. Expected format: 'something release vX.Y.Z'"
            exit 1
          fi

          echo "✅ Extracted tag: $TAG"
          echo "✅ Extracted body: $BODY"

          echo "tag_name=$TAG" >> $GITHUB_OUTPUT
          echo "release_body=$BODY" >> $GITHUB_OUTPUT

      - name: Generate update.json with version
        id: update_json
        shell: bash
        run: |

          # Write JSON
          cat <<EOF > update.json
          {
            "version": "${{ steps.extract_tag.outputs.tag_name }}",
            "build_time": "$(date -u +'%Y-%m-%dT%H:%M:%SZ')",
          }
          EOF

          echo "✅ update.json created:"
          cat update.json

      

      - name: Install Base dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements_noupscale.txt
          pip install pyinstaller

      - name: Build EXE with PyInstaller No Upscaling
        shell: pwsh
        run: |
          pyinstaller --noconfirm --onefile --console `
            --icon "swaplogo.ico" `
            --name "MTGA_Swapper_NoUpscale" `
            --add-data "C:/hostedtoolcache/windows/Python/3.11.9/x64/Lib/site-packages/archspec/json/cpu;archspec/json/cpu" `
            --add-data "C:/hostedtoolcache/windows/Python/3.11.9/x64/Lib/site-packages/UnityPy;UnityPy/" `
            --add-data "config.json;." `
            --add-data "changes.json;." `
            --add-data "update.json;." `
            --add-data "TempLocalizations.csv;." `
            main.py

      - name: Install Upscaling dependencies
        run: |
          pip install -r requirements.txt

      - name: Build EXE with PyInstaller Upscaling
        shell: pwsh
        run: |
          pyinstaller --noconfirm --onefile --console `
            --icon "swaplogo.ico" `
            --name "MTGA_Swapper" `
            --add-data "modelscsr.onnx;." `
            --add-data "modelesrgan2.onnx;." `
            --add-data "C:/hostedtoolcache/windows/Python/3.11.9/x64/Lib/site-packages/archspec/json/cpu;archspec/json/cpu" `
            --add-data "C:/hostedtoolcache/windows/Python/3.11.9/x64/Lib/site-packages/UnityPy;UnityPy/" `
            --add-data "config.json;." `
            --add-data "changes.json;." `
            --add-data "update.json;." `
            --add-data "TempLocalizations.csv;." `
            main.py

      - name: Add checksums to update.json
        id: add_checksums
        shell: bash
        run: |
          # Calculate SHA256 checksums
          SHA_MAIN=$(sha256sum dist/MTGA_Swapper.exe | cut -d ' ' -f1)
          SHA_NOUPSCALE=$(sha256sum dist/MTGA_Swapper_NoUpscale.exe | cut -d ' ' -f1)

          # Update JSON
          jq --arg sha_main "$SHA_MAIN" --arg sha_noupscale "$SHA_NOUPSCALE" \
            '.sha256_main = $sha_main | .sha256_noupscale = $sha_noupscale' update.json > update_tmp.json && mv update_tmp.json update.json

          echo "✅ update.json updated with checksums:"
          cat update.json

      - name: Commit update.json
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git add update.json
          git commit -m "Update update.json for ${{ steps.extract_tag.outputs.tag_name }}"
          git push origin main

      - name: Build changelog
        id: build_changelog
        uses: mikepenz/release-changelog-builder-action@v5
        with:
          configuration: .github/changelog-config.json
          mode: "COMMIT"
          toTag: ${{ github.sha }}
        env:
          GITHUB_TOKEN: ${{ secrets.GH_PAT }}

      - name: Create GitHub Release and Upload Files
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.extract_tag.outputs.tag_name }}
          name: Release ${{ steps.extract_tag.outputs.tag_name }}
          body: |
            # Changelog Generated by Github Actions

            ${{ steps.build_changelog.outputs.changelog }}
          files: |
            dist/MTGA_Swapper.exe
            dist/MTGA_Swapper_NoUpscale.exe
            modelscsr.onnx
            modelesrgan2.onnx
            update.json
        env:
          GITHUB_TOKEN: ${{ secrets.GH_PAT }}
